Refactoring, 2FA Implementation, and Testing

This pull request includes several tasks aimed at improving the code quality, security, and maintainability of the Wizardry-Gatekeeper project. The main goals of this PR are:

 - Refactor the codebase to improve readability, maintainability, and performance.
 - Implement two-factor authentication (2FA) functionality in a secure, user-friendly, and compatible way.
 - Write unit and integration tests for the refactored code and the 2FA functionality to ensure that they work as expected and don't introduce new issues or vulnerabilities.

Tasks

1: Refactoring
   The first task is to analyze the codebase and identify areas that need refactoring for better readability and maintainability. We will prioritize the areas to refactor based on their impact on the codebase and potential risks. Then, we will refactor the code in a way that improves readability, maintainability, and performance, and ensures that all changes are properly documented and tested. The refactoring process may involve:
 - Looking for code smells, complex or duplicated code, and outdated design patterns.
 - Simplifying complex logic, reducing code duplication, and optimizing code structure and design.

2: 2FA Implementation
   The second task is to implement two-factor authentication (2FA) functionality in a way that is secure, user-friendly, and compatible with the existing authentication and authorization flows. We will choose and implement a 2FA method (e.g., SMS, email, app-based authentication), update the authentication flow to include a 2FA verification step, modify the user model to include a 2FA status and 2FA recovery options, and add support for 2FA in user registration and management. We will also write unit and integration tests for 2FA verification and recovery.

3: Testing
   The third task is to write unit and integration tests for the refactored code and the 2FA functionality to ensure that they work as expected and don't introduce new issues or vulnerabilities. We will set up the test environment by creating a separate test database and configuring test properties in the project. We will also configure the test framework to use OAuth, OpenID Connect, and RBAC for testing. Then, we will create test cases for audit logging, encryption and decryption of sensitive data, and 2FA verification and recovery. Finally, we will integrate the tests with the build and deployment process to ensure that they are automatically run with each build and deployment, and document the test cases and results for future reference.

4: Review and Deployment
   After completing the tasks, we will review the code changes with other team members to ensure that they follow best practices, meet the project requirements, and align with the project roadmap. We will also deploy the changes to the development, staging, and production environments and monitor them for any issues or performance problems. Finally, we will continuously monitor and optimize the codebase to ensure that it remains readable, maintainable, and secure over time, using code analysis tools, conducting regular code reviews, and keeping up with best practices and industry standards.

Conclusion
 - This pull request aims to improve the code quality, security, and maintainability of the Wizardry-Gatekeeper project by refactoring the codebase, implementing 2FA functionality, and writing comprehensive tests. We hope that these changes will make the project more robust and reliable, and enable us to deliver better value to our users.
