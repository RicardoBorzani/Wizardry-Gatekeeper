#50: Wizardry-Gatekeeper-patch-1B Add support for OpenID Connect

1: Research and understand the OpenID Connect protocol:
 - Read the OpenID Connect specification and documentation to understand the concepts and features of the protocol.

2: Choose an OpenID Connect provider to use for testing and development:
 - Select an OpenID Connect provider that is compatible with the application and suitable for testing and development purposes.

3: Configure the Wizardry Gatekeeper application to use OpenID Connect:
 - Configure the application to use OpenID Connect by setting up the appropriate endpoints, scopes, and other configuration options.

4: Implement the necessary endpoints to initiate and complete the OpenID Connect authentication flow:
 - Implement the necessary endpoints to initiate and complete the OpenID Connect authentication flow, including the authorization request, the authorization response, and the token request.

5: Implement the necessary logic to handle OpenID Connect tokens and user information:
 - Implement the necessary logic to handle OpenID Connect tokens, including the access token and ID token, and retrieve user information from the OpenID Connect provider.

6: Add configuration options for the OpenID Connect provider and other settings:
 - Add configuration options for the OpenID Connect provider, including the client ID, client secret, and authorization server URL, as well as other settings such as token expiration and refresh intervals.

7: Write unit tests to ensure that OpenID Connect authentication and authorization work correctly:
 - Write unit tests to validate the implementation and ensure that OpenID Connect authentication and authorization work correctly.

8: Document how to configure and use OpenID Connect with the Wizardry Gatekeeper component:
 - Document how to configure and use OpenID Connect with the Wizardry Gatekeeper component, including the configuration options, authentication flow, and any other relevant information.

Note: It's important to follow best practices when implementing OpenID Connect, such as validating tokens, securing the client credentials, and handling errors and exceptions appropriately.
