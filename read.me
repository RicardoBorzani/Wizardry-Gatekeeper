Refactor code to improve readability and maintainability

This Pull Request (#58) aims to improve the readability and maintainability of the codebase for the Wizardry Gatekeeper. The following tasks will be performed:

1: Review the existing codebase
 - The codebase will be reviewed to identify areas that could benefit from refactoring. The areas will be prioritized based on the impact on readability, maintainability, and performance, as well as the effort required to refactor.

2: Develop a plan for each area
 - A plan will be developed for each identified area that outlines the changes to be made and the expected outcomes (e.g., improved code structure, reduced complexity, better documentation).

3: Apply coding best practices and standards
 - Coding best practices and standards, such as naming conventions, code commenting, and modularization, will be applied to the codebase.

4: Simplify complex code blocks and improve code reuse
 - Complex code blocks will be simplified, and code reuse will be improved through refactoring techniques such as extraction methods, classes, and interfaces.

5: Address technical debt
 - Any technical debt, such as outdated dependencies or unused code, will be addressed.

6: Test the refactored code
 - The refactored code will be tested to ensure that it works as expected and that there are no regressions or new issues introduced.

7: Document the refactoring process and outcomes
 - The refactoring process and outcomes, including any trade-offs or decisions made, will be documented for future reference.

8: Solicit feedback from the development team and stakeholders
 - Feedback from the development team and other stakeholders will be solicited to ensure that the refactored code meets their requirements and expectations.

9: Monitor and improve code maintainability and readability
 - Code maintainability and readability will be continuously monitored and improved as part of ongoing development efforts.


The main goal of this Pull Request is to improve the quality of the codebase by making it more maintainable and readable. By doing so, it will be easier to add new features, fix bugs, and maintain the system in the long term. The refactoring process will be performed carefully and methodically to minimize the risk of introducing new issues or breaking existing functionality.
If you have any questions or feedback about this Pull Request, please let us know. Thank you for your attention!
